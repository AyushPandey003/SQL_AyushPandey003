1. Find all documents where the field `item` is "Mochas"
db.sales.find({ "item": "Mochas" }).pretty()

2. Find all items where `price` is less than 15
db.sales.find({ "price": { "$lt": 15 } }).pretty()

3. Find items where `price` is either less than 10 or greater than 20
db.sales.find({ "$or": [ { "price": { "$lt": 10 } }, { "price": { "$gt": 20 } } ] }).pretty()

4. Find all documents where the `quantity` field exists
db.sales.find({ "quantity": { "$exists": true } }).pretty()

5. Find all documents where the `color` array contains the value "white"
db.sales.find({ "color": "white" }).pretty()

6. Update the `ram` of the user named "xTablet" to 24
db.users.updateOne({ "name": "xTablet" }, { "$set": { "ram": 24 } })

7. Find all products and return only the `spec` field
db.products.find({}, { "spec": 1, "_id": 0 }).pretty()

8. Find all products and sort them by `price` in descending order
db.products.find().sort({ "price": -1 }).pretty()

9. Find the first 2 products, skipping the first one
db.products.find().skip(1).limit(2).pretty()

10. Find all users whose `name` starts with "S" and `price` is greater than 700
db.users.find({ "name": { "$regex": "^S" }, "price": { "$gt": 700 } }).pretty()

11. Calculate the total `price` of all items
db.sales.aggregate([
  { "$group": { "_id": null, "totalPrice": { "$sum": "$price" } } }
])

12. Project only the `size` field for each item
db.sales.find({}, { "size": 1, "_id": 0 }).pretty()

13. Find items that are "Tall" size and group them by `item`
db.sales.aggregate([
  { "$match": { "size": "Tall" } },
  { "$group": { "_id": "$item", "totalQuantity": { "$sum": "$quantity" } } }
])

14. Find the second item when sorted by `price` in ascending order
db.sales.find().sort({ "price": 1 }).skip(1).limit(1).pretty()

15. Group by `item` and calculate the total quantity and average price
db.sales.aggregate([
  { 
    "$group": { 
      "_id": "$item",
      "totalQuantity": { "$sum": "$quantity" },
      "averagePrice": { "$avg": "$price" }
    } 
  }
])
